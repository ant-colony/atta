package groovy
import org.eclipse.paho.client.mqttv3.IMqttToken
import org.eclipse.paho.client.mqttv3.MqttMessage
import org.typeunsafe.atta.gateways.mqtt.MQTTGateway
import org.typeunsafe.atta.gateways.mqtt.tools.MQTTBroker
import org.typeunsafe.atta.gateways.mqtt.tools.MQTTHelper
import org.typeunsafe.atta.sensors.DHTSensor
import org.typeunsafe.atta.sensors.LightSensor

import java.util.concurrent.ExecutorService
import java.util.concurrent.Executors

ExecutorService env = Executors.newCachedThreadPool()

def mqttGatewayOne = new MQTTGateway(
    id:"mqttgw001",
    mqttId: "mqttgw001",
    execEnv: env,
    locationName: "Home",
    broker: new Broker(protocol:"tcp", host:"localhost", port:1883),
    connectOptions: MQTTHelper.getConnectOptions()
).sensors([
    new DHTSensor(id:"dhtRoom1", locationName: "ROOM1"),
    new DHTSensor(id:"dhtRoom2", locationName: "ROOM2"),
    new LightSensor(id:"lightRoom9A", locationName: "ROOM9"),
    new LightSensor(id:"lightRoom9B", locationName: "ROOM9")
])


mqttGatewayOne.initialize().connect(
    messageArrived: { String topic, MqttMessage message ->
      println "you've got a message on topic: $topic: $message"
    },
    deliveryComplete: { token ->
      println "delivery complete!!!"
    },
    success: { IMqttToken token ->
      println mqttGatewayOne.id + ": connection is ok"

      // subscription
      mqttGatewayOne.subscribe(
          topic:"home/bob",
          success:{IMqttToken t -> null },
          failure:{ IMqttToken t, Throwable e -> null}
      )

      mqttGatewayOne.start {
        while (true) {
          Thread.sleep(2000)
          mqttGatewayOne.notifyAllSensors()
          Thread.sleep(1000)

          // publication
          mqttGatewayOne
              .topic("home/sensors")
              .jsonContent(mqttGatewayOne.lastSensorsData())
              .publish(
                success: { IMqttToken t -> null },
                failure: { IMqttToken t, Throwable e -> null}
              )
        }
      }

    },
    failure: { IMqttToken token, Throwable e ->
      println mqttGatewayOne.id + ": connection is ko"
      println e.message
    }
)
